version: '3.8'

services:
  auth-service:
    build: 
      context: ./microservices/auth-service/backend
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=auth-service-db
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_NAME=cesi_eats
    networks:
      - app-network

  client-service:
    build: 
      context: ./microservices/client-service/backend
    container_name: client-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://client-service-db:27017/cesieats
    networks:
      - app-network

  client-frontend:
    build: 
      context: ./microservices/client-service/frontend
      dockerfile: Dockerfile
    container_name: client-frontend
    ports:
      - "8081:80"
    networks:
      - app-network

  delivery-service:
    build: 
      context: ./microservices/delivery-service/backend
    container_name: delivery-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://delivery-service-db:27017/cesieats
    networks:
      - app-network

  delivery-frontend:
    build: 
      context: ./microservices/delivery-service/frontend
    container_name: delivery-frontend
    ports:
      - "8082:80"
    networks:
      - app-network

  restaurant-service:
    build: 
      context: ./microservices/restaurant-service/backend
    container_name: restaurant-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://restaurant-service-db:27017/cesieats
    networks:
      - app-network

  restaurant-frontend:
    build: 
      context: ./microservices/restaurant-service/frontend
    container_name: restaurant-frontend
    ports:
      - "8083:80"
    networks:
      - app-network

  technical-service:
    build: 
      context: ./microservices/technical-service/backend
    container_name: technical-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://technical-service-db:27017/cesieats
    networks:
      - app-network

  technical-frontend:
    build: 
      context: ./microservices/technical-service/frontend
    container_name: technical-frontend
    ports:
      - "8084:80"
    networks:
      - app-network

  sales-service:
    build: 
      context: ./microservices/sales-service/backend
    container_name: sales-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://sales-service-db:27017/cesieats
    networks:
      - app-network

  sales-frontend:
    build: 
      context: ./microservices/sales-service/frontend
      dockerfile: Dockerfile
    container_name: sales-frontend
    ports:
      - "8085:80"
    networks:
      - app-network

  component-service:
    build: 
      context: ./microservices/component-service/backend
    container_name: component-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://component-service-db:27017/cesieats
    networks:
      - app-network

  component-frontend:
    build: 
      context: ./microservices/component-service/frontend
      dockerfile: Dockerfile
    container_name: component-frontend
    ports:
      - "8086:80"
    networks:
      - app-network

  kong:
    build:
      context: ./gateway/kong
      dockerfile: Dockerfile
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8000
    volumes:
      - ./gateway/kong/kong.yml:/usr/local/kong/declarative/kong.yml # Kong declarative config file
    ports:
      - "8000:8000"
      - "8443:8443"
    depends_on:
      - auth-service
      - client-service
      - delivery-service
      - restaurant-service
      - technical-service
      - sales-service
      - component-service
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes: 
      - ./microservices/client-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/client-service/frontend/build:/usr/share/nginx/html
      - ./microservices/delivery-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/delivery-service/frontend/build:/usr/share/nginx/html
      - ./microservices/restaurant-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/restaurant-service/frontend/build:/usr/share/nginx/html
      - ./microservices/technical-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/technical-service/frontend/build:/usr/share/nginx/html
      - ./microservices/sales-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/sales-service/frontend/build:/usr/share/nginx/html
      - ./microservices/component-service/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./microservices/component-service/frontend/build:/usr/share/nginx/html
    ports:
      - "8080:80" # Nginx HTTP port
    networks:
      - app-network # Connect to the app-network
    depends_on:
      - kong
   
networks:
  app-network:
    driver: bridge
